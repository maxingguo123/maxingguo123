// Pipeline specific variables
// This pipeline is obsolete

def cluster="spr"
def def_list = ["tdx/tdx-sandstone","tdx/tdx-stressng"]
//def def_list = ["tdx/tdx-sandstone-combo"]
def test_list = def_list
def NS="spr-tdx"
def KUBECONFIG="--kubeconfig=/srv/kube/config.icx-1"
def JENKINS_NODE_LABEL="spr-tdx" 

pipeline {
  agent { label 'common' }
  stages {
    stage("Tests") {
      steps {
        script {
          test_list.each { test ->
          stage(test) {
            catchError {
                run_job("${env.WORKSPACE}/${test}.${cluster}")
            }
          }
        }}
      }
    }
  }
}

// Agnostic variables and functions
def private iter
def private base
def run_job(job_file) {
  base = load "${env.WORKSPACE}/base/base.groovy"
  job = load(job_file)
  base.init()
  env.NS = "spr-tdx"
  env.JENKINS_NODE_LABEL = "spr-tdx"
  env.KUBECTL_ARGS="--kubeconfig=/srv/kube/config.icx-1"
  iter = (env.ITERATIONS as int) ?: (1 as int)
  for (int i = 0; i < iter; i++) {
    base.run(env.JOB_RUNTIME)
  }
  base.reset()
}
