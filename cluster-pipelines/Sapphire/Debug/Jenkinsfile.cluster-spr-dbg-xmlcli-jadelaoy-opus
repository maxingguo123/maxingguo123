// Pipeline specific variables

def cluster="spr"

def NS="spr-dbg-xmlcli-jadelaoy"
def KUBECONFIG="--kubeconfig=/srv/kube/config.opus"
def JENKINS_NODE_LABEL="spr-dbg-xmlcli-jadelaoy"

def KNOBS="volMemMode=1,EnableTme=1,EnableMktme=1,EnableGlobalIntegrity=1,EnableSgx=1,EnableSaf=0"

pipeline {
  agent { label 'piv' }
  stages {
        stage("BIOS KNOBS") {
                steps {
                    script {
                        stage("XMLCLI") {
                            catchError {
                            build(job: "Tests/xmlcli-run", parameters:  [string(name: "NS", value:"${NS}"), string(name: "KUBECONFIG", value:"${KUBECONFIG}"), string(name: "KNOBS", value: "${KNOBS}"), string(name: "JENKINS_NODE_LABEL", value: "${JENKINS_NODE_LABEL}")])
                            }
                        }
                    }
                }
            }
	}
     }
// Agnostic variables and functions
def private iter
def private base
def run_job(job_file) {
  base = load "${env.WORKSPACE}/base/base.groovy"
  job = load(job_file)
  base.init()
  env.NS = "spr-dbg-xmlcli-jadelaoy"
  env.JENKINS_NODE_LABEL = "spr-dbg-xmlcli-jadelaoy"
  env.KUBECTL_ARGS="--kubeconfig=/srv/kube/config.opus"
  iter = (env.ITERATIONS as int) ?: (1 as int)
  for (int i = 0; i < iter; i++) {
    base.run(env.JOB_RUNTIME)
  }
  base.reset()
}
