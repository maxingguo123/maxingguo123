def cluster="opusa"

def test_list1 = ["sandstone/sandstone-release", "sandstone/sandstone-release-oneoff", "sandstone/sandstone-combo", "imunch/imunch", "shc/shc", "DOL/DOL", "DOL/dol-google-skx", "jasper/iperf", "jasper/mlc", "jasper/fio"]
def test_list2 = ["pts/pts-coremark-v0.1", "xhpl-linpack/hp-linpack", "mixer/mixer", "pintsx/geekbench", "pintsx/ycruncher", "posted-interrupts/posted-interrupts", "ive-vt/auto-reboot", "ive-vt/create-teardown"]
def test_list = test_list1 + test_list2

def KUBECONFIG="--kubeconfig=/srv/kube/config.opus"
def JENKINS_NODE_LABEL="frigora"
def NS="piv-8"

pipeline {
  agent { label "common" }
  stages {
     stage("Tests") {
      steps {
        script {
          test_list.each { test ->
          stage(test) {
            catchError {
                run_job("${env.WORKSPACE}/${test}.${cluster}")
            }
          }
        }}
      }
    } 
  }
}

// Agnostic variables and functions
def private iter
def private base
def run_job(job_file) {
  base = load "${env.WORKSPACE}/base/base.groovy"
  job = load(job_file)
  base.init()
  env.NS = "piv-8"
  env.JENKINS_NODE_LABEL = "frigora"

  iter = (env.ITERATIONS as int) ?: (1 as int)
  for (int i = 0; i < iter; i++) {
    base.run(env.JOB_RUNTIME)
  }
  base.reset()
}

