def cluster="spr"

def def_list = ["shc/shc"]
def test_list = def_list

def NS="shc-test-temp"
def KUBECONFIG="--kubeconfig=/srv/kube/config.flex"
def JENKINS_NODE_LABEL="shc-test-temp"


pipeline {
    agent { label 'common' }
    stages {

      stage("Tests") {
            steps {
                script {
                    test_list.each { test ->
                    stage(test) {
                        catchError(catchInterruptions: false) {
                            run_job("${env.WORKSPACE}/${test}.${cluster}")
                            }
                        }
                    }
                }
            }
        }
 

    }
    post {
            aborted {
                script{
                    stage("aborted/cancelled tasks from jenkin UI..Huh..Going to call Tests/clean-namespaces") {
                        catchError(catchInterruptions: false) {
                            build(job: "Tests/clean-namespaces", parameters:  [string(name: "NS", value: "${NS}"), string(name: "CLUSTER", value: "${cluster}"), string(name: "PO", value: "TRUE")])
                        }
                    }
                }
            }
        }
}


// Agnostic variables and functions
def private iter
def private base
def run_job(job_file) {
  base = load "${env.WORKSPACE}/base/base.groovy"
  job = load(job_file)
  base.init()
  env.KUBECTL_ARGS="--kubeconfig=/srv/kube/config.flex"
  env.NS = "shc-test-temp"
  env.JENKINS_NODE_LABEL = "shc-test-temp"
  env.JENKINS_TEST_TAG="spr_medium_hvm_v4.6.2"
  iter = (env.ITERATIONS as int) ?: (1 as int)
  for (int i = 0; i < iter; i++) {
    base.run(env.JOB_RUNTIME)
  }
  base.reset()
}
