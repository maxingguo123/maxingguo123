// Pipeline specific variables

def cluster="flex"
def test_list = ["ive-vt/hybrid-dense"]
def NS="${params.NS}"
def KUBECONFIG="--kubeconfig=/srv/kube/config.flex"
def JENKINS_NODE_LABEL="${params.JENKINS_NODE_LABEL}"

pipeline {
  agent { label 'piv' }
  environment {
    KUBECTL_ARGS = "${KUBECONFIG}"
    JENKINS_NODE_LABEL = "${JENKINS_NODE_LABEL}"
    NS = "${NS}"
  }
  stages {
     
    stage("WORKLOADS") {
      steps {
        script {
          test_list.each { test ->
          stage(test) {
            catchError {
                run_job("${env.WORKSPACE}/${test}.${cluster}")
            }
          }
          }
        }
      }
    }
  }
}

// Agnostic variables and functions
def private iter
def private base
def run_job(job_file) {
  base = load "${env.WORKSPACE}/base/base.groovy"
  job = load(job_file)
  base.init()
  iter = (env.ITERATIONS as int) ?: (1 as int)
  for (int i = 0; i < iter; i++) {
    base.run(env.JOB_RUNTIME)
  }
  base.reset()
}
