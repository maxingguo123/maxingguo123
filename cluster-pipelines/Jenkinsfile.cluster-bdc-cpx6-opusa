// Pipeline specific variables
def cluster="opusa"

def init_list = ["passmark-burnin/passmark-burnin", "passmark-burnin-vm/passmark-burnin-vm"]
def test_list = init_list

def KUBECONFIG="--kubeconfig=/srv/kube/config.opus"
def JENKINS_NODE_LABEL="cpx6"
def NS="cpx6"

pipeline {
  agent { label "common" }
  stages {
     stage("Tests") {
      steps {
        script {
          test_list.each { test ->
          stage(test) {
            catchError {
                run_job("${env.WORKSPACE}/${test}.${cluster}")
            }
          }
        }}
      }
    } 
  }
}


// Agnostic variables and functions
def private iter
def private base
def run_job(job_file) {
  base = load "${env.WORKSPACE}/base/base.groovy"
  job = load(job_file)
  base.init()
  env.NS = "cpx6"
  env.JENKINS_NODE_LABEL = "cpx6"
  iter = (env.ITERATIONS as int) ?: (1 as int)
  for (int i = 0; i < iter; i++) {
    base.run(env.JOB_RUNTIME)
  }
  base.reset()
}
