def NS="memory-margin"
def KUBECONFIG="--kubeconfig=/srv/kube/config.icx-1"
def JENKINS_NODE_LABEL="memory-margin" 


pipeline {
    agent { label 'common' }
    stages {
        stage("Tests") {
             steps {
                 script {
                     stage("Memory-margin") {
                        catchError {
                            build(job: "Tests/memory-margin", parameters:  [string(name: "NS", value:"${NS}"), string(name: "KUBECONFIG", value:"${KUBECONFIG}"), string(name: "JENKINS_NODE_LABEL", value:  "${JENKINS_NODE_LABEL}"), string(name: "CYCLES", value: "5")])
                        }
                    }
                }
            }
        }
    }
}



// Agnostic variables and functions
def private iter
def private base
def run_job(job_file) {
  base = load "${env.WORKSPACE}/base/base.groovy"
  job = load(job_file)
  base.init()
  env.NS = "memory-margin"
  env.JENKINS_NODE_LABEL = "memory-margin"
  iter = (env.ITERATIONS as int) ?: (1 as int)
  for (int i = 0; i < iter; i++) {
    base.run(env.JOB_RUNTIME)
  }
  base.reset()
}
