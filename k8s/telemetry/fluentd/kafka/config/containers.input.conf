
<source>
  @id fluentd-containers.log
  @type tail
  path /var/log/containers/*.log
  pos_file /var/log/es-containers.log.pos
  tag raw.kubernetes.*
  read_from_head true
  <parse>
    @type multi_format
    <pattern>
      format json
      time_key time
      time_format %Y-%m-%dT%H:%M:%S.%NZ
    </pattern>
    <pattern>
      format /^(?<time>\S+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/
      time_format %Y-%m-%dT%H:%M:%S.%N%:z
    </pattern>
  </parse>
</source>
# tag fluentd rate_exceeded logs, ignore other fluentd logs
<match raw.kubernetes.var.log.containers.**fluent**.log>
  @type rewrite_tag_filter
  <rule>
    key log
    pattern /{"group_key"/
    tag rate_exceeded
  </rule>
  <rule>
    key log
    pattern /.+/
    tag ignore
  </rule>
</match>
# parse rate exceeded logs into format
<filter rate_exceeded>
  @type parser
  key_name log
  <parse>
    @type regexp
    expression /^(?<time>.{10}\s.{18}\s.{5})\s(?<level>.*?):\s(?<log>.*)$/
    #time_format %d/%b/%Y:%H:%M:%S %z
  </parse>
</filter>
# make log message into record accessible via json
<filter rate_exceeded>
  @type parser
  key_name log
  <parse>
    @type json
  </parse>
</filter>
# create metrics for rate exceeded
<filter rate_exceeded>
    @type prometheus
    # fluentd_input_status_rate_exceeded_count metric counts instances of rate_exceeded messages in the fluentd log and is NOT a total of instances or messages etc.
    <metric>
      name fluentd_input_status_rate_exceeded_count
      type counter
      desc The total number rate exceeded log messages
    </metric>
    # fluentd_input_status_rate_exceeded_guage contains the rate of messages per second for host and container combos that exceed the max rate
    <metric>
      name fluentd_input_status_rate_exceeded_guage
      type gauge
      desc Rate of messages
      key rate_s
    </metric>
</filter>
# do not send rate_exceeded logs to final output
<match rate_exceeded>
  @type null
</match>

<match raw.kubernetes.var.log.containers.**fluent**.log>
  @type null
</match>

<match raw.kubernetes.var.log.containers.**opcm-collector**.log>
  @type null
</match>

# <match raw.kubernetes.var.log.containers.**kafka**.log>
#   @type null
# </match>


# Detect exceptions in the log output and forward them as one log entry.
<match raw.kubernetes.**>
  @id raw.kubernetes
  @type detect_exceptions
  remove_tag_prefix raw
  message log
  stream stream
  multiline_flush_interval 5
  max_bytes 500000
  max_lines 1000
</match>
