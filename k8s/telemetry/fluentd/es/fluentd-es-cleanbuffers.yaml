apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd-es
  namespace: default
  labels:
    k8s-app: fluentd-es
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd-es
  labels:
    k8s-app: fluentd-es
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
rules:
- apiGroups:
  - ""
  resources:
  - "namespaces"
  - "pods"
  verbs:
  - "get"
  - "watch"
  - "list"
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd-es
  labels:
    k8s-app: fluentd-es
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
subjects:
- kind: ServiceAccount
  name: fluentd-es
  namespace: default
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: fluentd-es
  apiGroup: ""
---
apiVersion: apps/v1
#kind: ReplicaSet
kind: DaemonSet
metadata:
  name: fluentd-es-v2.2.1
  namespace: default
  labels:
    k8s-app: fluentd-es
    version: v2.2.1
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
        #replicas: 2
  selector:
    matchLabels:
      k8s-app: fluentd-es
      version: v2.2.1
  template:
    metadata:
      labels:
        k8s-app: fluentd-es
        kubernetes.io/cluster-service: "true"
        version: v2.2.1
      # This annotation ensures that fluentd does not get evicted if the node
      # supports critical pod annotation based priority scheme.
      # Note that this does not guarantee admission on the nodes (#40573).
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
            #priorityClassName: system-node-critical
      serviceAccountName: fluentd-es
      nodeSelector:
        nodeowner: default
      containers:
      - name: fluentd-es
        #image: k8s.gcr.io/fluentd-elasticsearch:v2.3.2
        ports:
        - name: metrics
          containerPort: 24231
          protocol: TCP
        image: sraghav1/fluentd-plugins:v3.0.1
        command: ["bash"]
        args: ["-c", "rm -rf /var/log/fluentd-buffers; sleep infinity"]
        # args: ["-c", "fluent-gem install fluent-plugin-kafka; /run.sh;"]
        env:
        - name: FLUENTD_ARGS
          value: -q
          #value: --no-supervisor -q
        resources:
          requests:
            cpu: 500m
            memory: 500Mi
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 80%
    type: RollingUpdate
