# TBD: Count heartbeats to help tracking data transfer
# <match atscale>
#   @type rewrite_tag_filter
#   <rule>
#     key log
#     pattern /^[\s]*Heartbeat:/
#     tag heartbeat
#   </rule>
#   <rule>
#     key tag
#     pattern (.+)
#     tag other
#   </rule>
# </match>

# <filter heartbeat>
#   @type parser
#   key_name log
#   reserve_data true
#   reserve_time true
#   <parse>
#     @type regexp
#     expression /^[\s]*Heartbeat:[\s]*(?<COUNT>[0-9]+).*/
#     types COUNT:integer
#   </parse>
# </filter>

# <filter heartbeat>
#   @type prometheus
#   <metric>
#     name fluentd_input_status_heartbeat_count
#     type gauge
#     key COUNT
#     desc Heartbeat counter
#     <labels>
#       tag ${tag}
#       hostname ${hostname}
#     </labels>
#   </metric>
# </filter>

<filter **>
   @type prometheus
   <metric>
     name fluentd_input_status_num_records_total
     type counter
     desc The total number of incoming records 
     <labels>
       tag ${tag}
       hostname ${hostname}
     </labels>
   </metric>
 </filter>

<match **>
  @type copy
  <store>
    @id elasticsearch
    @type elasticsearch
    @log_level info
    type_name fluentd
    hosts {{range .Values.elasticsearch.hosts}}{{.host}}:{{.port}},{{end}}
    {{if .Values.elasticsearch.user}}user {{.Values.elasticsearch.user}}{{end}}
    {{if .Values.elasticsearch.password}}password {{.Values.elasticsearch.password}}{{end}}
    scheme {{.Values.elasticsearch.scheme}}
    reload_connections false
    reconnect_on_error true
    {{if eq .Values.elasticsearch.scheme "https"}}
    ssl_verify false
    ssl_version TLSv1_2
    {{end}}
    logstash_format true
    logstash_prefix {{.Values.esindex}}
    <buffer>
      @type file
      path "/var/log/fluentd-buffers/kubernetes.system.buffer/"
      flush_mode interval
      retry_type exponential_backoff
      flush_thread_count 2
      flush_interval 10s
      retry_forever
      retry_max_interval 32
      chunk_limit_size 12M
      queue_limit_length 2
      overflow_action block
    </buffer>
  </store>
  {{if .Values.copy_to_stdout}}
  <store>
    @type stdout
  </store>
  {{end}}
</match>
